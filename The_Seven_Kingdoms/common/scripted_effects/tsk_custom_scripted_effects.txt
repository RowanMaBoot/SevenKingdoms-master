#Heals minor diseases
heal_minor = {
	if = {
		limit = { trait = ill }
		remove_trait = ill
	}
	if = {
		limit = { trait = syphilitic}
		remove_trait = syphilitic
	}
	if = {
		limit = { trait = leper }
		remove_trait = leper
	}
	if = {
		limit = {trait = pneumonic}
		remove_trait = pneumonic
	}
	if = {
		limit = {trait = lovers_pox}
		remove_trait = lovers_pox
	}
	if = {
		limit = {trait = depressed}
		remove_trait = depressed
	}
	if = {
		limit = {trait = stressed}
		remove_trait = stressed
	} 
	if = {
		limit = {trait = wounded}
		remove_trait = wounded
	}
}

# Can be used anywhere you want to buff the combat skill of a character.
# Made for the education events, where it is tied into the skills of the educator (preventing too much growth).

train_combat_skill = {
    if = {
        limit = {
            NOR = {
                trait = dueling_novice
				trait = dueling_adept
				trait = dueling_skilled
				trait = dueling_expert
				trait = dueling_master
				trait = dueling_legend
            }
        }
        add_trait = dueling_novice
        break = yes
    }
    if = {
        limit = {
            trait = dueling_novice
        }
        hidden_tooltip = { remove_trait = dueling_novice }
        add_trait = dueling_adept
        break = yes
    }
    if = {
        limit = {
            trait = dueling_adept
        }
        hidden_tooltip = { remove_trait = dueling_adept }
        add_trait = dueling_skilled
        break = yes
    }
    if = {
        limit = {
            trait = dueling_skilled
        }
        hidden_tooltip = { remove_trait = dueling_skilled }
        add_trait = dueling_expert
        break = yes
    }
    if = {
        limit = {
            trait = dueling_expert
        }
        hidden_tooltip = { remove_trait = dueling_expert }
        add_trait = dueling_master
        break = yes
    }
    if = {
        limit = {
            trait = dueling_master
        }
        hidden_tooltip = { remove_trait = dueling_master }
        add_trait = dueling_legend
        break = yes
    }
}

# A chance based version that allows improvement of your skill once
# uses
# set_character_flag = improved_combat_skills
# on success to determine if improvement was met. If not, they may retry until they get the result they want (or do not want)
train_combat_skill_chance_dangerous = {
    random_list = {
        25 = {
            if = {
                limit = {
                    NOR = {
                        trait = dueling_novice
                        trait = dueling_adept
                        trait = dueling_skilled
                        trait = dueling_expert
                        trait = dueling_master
                        trait = dueling_legend
                    }
                }
                add_trait = dueling_novice
                set_character_flag = improved_combat_skills
                break = yes
            }
            if = {
                limit = {
                    trait = dueling_novice
                }
                hidden_tooltip = { remove_trait = dueling_novice }
                add_trait = dueling_adept
                set_character_flag = improved_combat_skills
                break = yes
            }
            if = {
                limit = {
                    trait = dueling_adept
                }
                hidden_tooltip = { remove_trait = dueling_adept }
                add_trait = dueling_skilled
                set_character_flag = improved_combat_skills
                break = yes
            }
            if = {
                limit = {
                    trait = dueling_skilled
                }
                hidden_tooltip = { remove_trait = dueling_skilled }
                add_trait = dueling_expert
                set_character_flag = improved_combat_skills
                break = yes
            }
            if = {
                limit = {
                    trait = dueling_expert
                }
                hidden_tooltip = { remove_trait = dueling_skilled }
                add_trait = dueling_master
                set_character_flag = improved_combat_skills
                break = yes
            }
        }
        50 = {
            # do nothing
        }
        18 = {
            random_list = {
                85 = { add_trait = wounded }
                15 = { add_trait = severely_injured }
            }
        }
        5 = {
            random_list = {
                20 = {
                    add_trait = one_eyed
                    add_trait = wounded
                }
                20 = {
                    add_trait = one_handed
                    add_trait = severely_injured
                }
                15 = {
                    add_trait = blinded
                    add_trait = severely_injured
                }
                10 = {
                    add_trait = one_legged
                    add_trait = severely_injured
                }
                10 = {
                    add_trait = disfigured
                    add_trait = severely_injured
                }
                10 = { add_trait = mangled }
                
            }
        }
        2 = {
            death = {
                death_reason = death_accident
            }
        }
    }
}

### Duel System Wounding
# Death effect gives them a flag, which can be used to kill the character/s.
# Minor wounds has a large chance of inflicting wounded and a small chance of maiming.
# Major wounds has a large chance of maiming, a small chance of wounding and a tiny chance of death.

# Effects (death, injury) are handled in the event options.

# Flags Used:
# tsk_duel_wounded_major -- used for major injury description -- add_maimed_trait_effect = yes
# tsk_duel_wounded_minor -- used for minor injury description -- add_trait_wounded_effect = yes
# tsk_duel_death -- used for death description.

# Combat results has three possible primary outcomes, modified by the combat_rating_diff of participants.

duel_flag_cleanup_effect = {
    clr_character_flag = tsk_duel_wounded_major
    clr_character_flag = tsk_duel_wounded_minor
    clr_character_flag = tsk_duel_death
    clr_character_flag = tsk_duel_flee_attempt
    clr_character_flag = tsk_duel_flee_attempt_success
    clr_character_flag = tsk_duel_draw
    clr_character_flag = tsk_duel_lost
    FROM = {
        clr_character_flag = tsk_duel_wounded_major
        clr_character_flag = tsk_duel_wounded_minor
        clr_character_flag = tsk_duel_death
        clr_character_flag = tsk_duel_flee_attempt
        clr_character_flag = tsk_duel_flee_attempt_success
        clr_character_flag = tsk_duel_draw
        clr_character_flag = tsk_duel_lost
    }
}

################## STAGE 1 ##################
# Stage one effects are used in Stage 2.

victim_duel_wounding_death_effect = {
    set_character_flag = tsk_duel_death
}

victim_duel_wounding_major_effect = {
    random_list = {
        85 = {
            set_character_flag = tsk_duel_wounded_major
        }
        10 = {
            set_character_flag = tsk_duel_wounded_minor
        }
        5 = {
            victim_duel_wounding_death_effect = yes
        }
    }
}

victim_duel_wounding_minor_effect = {
    
    random_list = {
        89 = {
            set_character_flag = tsk_duel_wounded_minor
        }
        10 = {
            set_character_flag = tsk_duel_wounded_major
        }
        1 = {
            victim_duel_wounding_death_effect = yes
        }
    }
}

victim_duel_determine_effect_duel = {
    if = {
        limit = {
            has_character_flag = tsk_duel_wounded_major
        }
        add_maimed_trait_effect = yes
    }
    if = {
        limit = {
            has_character_flag = tsk_duel_wounded_minor
        }
        add_trait_wounded_effect = yes
    }
}

################## STAGE 2 ##################
# Stage 2 effects are used in Stage 3

# Combat Effects assign flags, which are then read in the event option to display effects.
duel_combat_loss_effects = {
    if = {
        limit = { can_be_maimed_trigger = yes }
        random_list = {
            45 = { victim_duel_wounding_major_effect = yes }
            50 = { victim_duel_wounding_minor_effect = yes }
            5 = { }
        }
    }
    if = {
        limit = { can_be_maimed_trigger = no }

        victim_duel_wounding_death_effect = yes
    }
    
    set_character_flag = tsk_duel_lost
}

duel_combat_draw_effects = {
    if = {
        limit = { can_be_maimed_trigger = yes }
        random_list = {
            20 = { victim_duel_wounding_major_effect = yes }
            70 = { victim_duel_wounding_minor_effect = yes }
            10 = { }
        }
    }
    if = {
        limit = { can_be_maimed_trigger = no }
        
        victim_duel_wounding_death_effect = yes
    }
    
    set_character_flag = tsk_duel_draw
}

################## STAGE 3 ##################

# This effect determines the difference in combat skill between fighters and, through a small amount of random,
# determines what the result of combat is.

duel_combat_results_skill_effect = {
    print_scope_trigger = yes
    random_list = {
        33 = {
            modifier = {
                factor = 4.00
                FROM = {
                    combat_rating_diff = { who = ROOT value = 8 }
                }
            }
            modifier = {
                factor = 3.50
                FROM = {
                    combat_rating_diff = { who = ROOT value = 7 }
                    NOT = { combat_rating_diff = { who = ROOT value = 8 } }
                }
            }
            modifier = {
                factor = 2.75
                FROM = {
                    combat_rating_diff = { who = ROOT value = 6 }
                    NOT = { combat_rating_diff = { who = ROOT value = 7 } }
                }
            }
            modifier = {
                factor = 2.25
                FROM = {
                    combat_rating_diff = { who = ROOT value = 5 }
                    NOT = { combat_rating_diff = { who = ROOT value = 6 } }
                }
            }
            modifier = {
                factor = 1.75
                FROM = {
                    combat_rating_diff = { who = ROOT value = 4 }
                    NOT = { combat_rating_diff = { who = ROOT value = 5 } }
                }
            }
            modifier = {
                factor = 1.5
                FROM = {
                    combat_rating_diff = { who = ROOT value = 3 }
                    NOT = { combat_rating_diff = { who = ROOT value = 4 } }
                }
            }
            modifier = {
                factor = 1.25
                FROM = {
                    combat_rating_diff = { who = ROOT value = 2 }
                    NOT = { combat_rating_diff = { who = ROOT value = 3 } }
                }
            }
            modifier = {
                factor = 1.15
                FROM = {
                    combat_rating_diff = { who = ROOT value = 1 }
                    NOT = { combat_rating_diff = { who = ROOT value = 2 } }
                }
            }
            
            FROM = { duel_combat_loss_effects = yes }
        }

        33 = {
            modifier = {
                factor = 3
                FROM = {
                    combat_rating_diff = { who = ROOT value = 0 } # No difference
                }
            }
            
            duel_combat_draw_effects = yes
            FROM = { duel_combat_draw_effects = yes }
        }

        33 = {
            modifier = {
                factor = 4.00
                
                FROM = {
                    combat_rating_diff = { who = ROOT value = -8 }
                }
            }
            modifier = {
                factor = 3.50
                
                FROM = {
                    combat_rating_diff = { who = ROOT value = -7 }
                    NOT = { combat_rating_diff = { who = ROOT value = -8 } }
                }
            }
            modifier = {
                factor = 2.75
                
                FROM = {
                    combat_rating_diff = { who = ROOT value = 6 }
                    NOT = { combat_rating_diff = { who = ROOT value = 7 } }
                }
            }
            modifier = {
                factor = 2.25
                
                FROM = {
                    combat_rating_diff = { who = ROOT value = -5 }
                    NOT = { combat_rating_diff = { who = ROOT value = -6 } }
                }
            }
            modifier = {
                factor = 1.75
                
                FROM = {
                    combat_rating_diff = { who = ROOT value = -4 }
                    NOT = { combat_rating_diff = { who = ROOT value = -5 } }
                }
            }
            modifier = {
                factor = 1.5
                
                FROM = {
                    combat_rating_diff = { who = ROOT value = -3 }
                    NOT = { combat_rating_diff = { who = ROOT value = -4 } }
                }
            }
            modifier = {
                factor = 1.25
                
                FROM = {
                    combat_rating_diff = { who = ROOT value = -2 }
                    NOT = { combat_rating_diff = { who = ROOT value = -3 } }
                }
            }
            modifier = {
                factor = 1.15
                
                FROM = {
                    combat_rating_diff = { who = ROOT value = -1 }
                    NOT = { combat_rating_diff = { who = ROOT value = -2 } }
                }
            }
            
            duel_combat_loss_effects = yes
        }
    }
}

add_priest_trait_effect = {
	if = {
		limit = { religion = drowned_god }
		add_trait = drowned
	}
	else_if = {
		limit = { religion = the_seven }
		if = {
			limit = { 
				is_female = no
				NOT = { has_landed_title = k_papal_state }
			}
			add_trait = septon
			set_special_character_title = title_septon
		}
		if = {
			limit = { is_female = yes }
			add_trait = septa
			set_special_character_title = title_septa
		}
	}
	else_if = {
		limit = { religion = rhllor }
		add_trait = red_priest
	}	
	else_if = {
		limit = { has_landed_title = k_papal_state }
		add_trait = septon
	}
}

knight_character_effect = {
	if = {
		limit = { trait = squire }
		remove_trait = squire
	}	
	hidden_tooltip = { 
		if = {
			limit = { 
				is_ruler = no 
				NOT = { has_minor_title = title_prince }
				NOT = { has_minor_title = title_queen_mother }
				NOT = { has_minor_title = title_ruler_consort }
			}
			if = {
				limit = { is_female = no } 
				set_special_character_title = title_generic_ser
			}
			if = {
				limit = { is_female = yes }
				set_special_character_title = title_generic_lady	
			}
		}	
	}
}